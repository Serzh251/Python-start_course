# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду “stop”. При этом скрипт завершается,сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и
# отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

my_list = list()
inline = ''


class OwnError(Exception):
    def __init__(self, txt):
        self.txt = txt


while True:
    try:
        inline = input('введите число для создания списка, для окончания введите "stop": ')
        if inline == 'stop':
            break
        elif inline.isdigit():
            inline = int(inline)
            my_list.append(inline)
        else:
            el = ''
            for ch in inline:
                if (48 <= ord(ch) <= 57) or (ord(ch) == 46):
                    el += ch
            if len(el) == len(inline) and len(inline) != 1:
                inline = float(inline)
                my_list.append(inline)
            else:
                raise OwnError("Вы ввели не число!")
    except OwnError as err:
        print(err)
print(f'ваш список: {my_list}')
